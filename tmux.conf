
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# prefixキーをC-qに変更する, 2回押すとtmux内のプログラムにC-qを送る
set -g prefix C-q
bind C-q send-prefix
unbind C-b

# set shell
set-option -g default-shell "${SHELL}"

# auto start terminal
#set -g @continuum-boot 'on'
#set -g @continuum-boot-options 'gnome-terminal'
# auto restore tmux
set -g @continuum-restore 'on'

# window の作成, 移動
bind -n M-c new-window -c "#{pane_current_path}"
#bind -n C-A previous-window
bind -n C-D next-window

# session の作成, 移動
bind -n C-M-c new-session
bind -n C-M-w switch-client -p
bind -n C-M-s switch-client -n

# pane の分割
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-h split-window -v -c "#{pane_current_path}"

# pane moving
bind -n M-w select-pane -D
bind -n M-s select-pane -U
bind -n M-d select-pane -R
#bind -n M-a select-pane -L

# config of pane moving
# https://qiita.com/yuki_ycino/items/ef5e6b63c8f9af2f03c0
# Vim Tmux Navigator
is_zsh="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'Ss\\+\\s*-zsh$'"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*fzf$'"
is_peco="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*peco$'"
bind -n C-M-a run "($is_zsh && tmux send-keys C-M-a) || ($is_vim && tmux send-keys C-M-a) || ($is_fzf && tmux send-keys C-M-a) || ($is_peco && tmux send-keys C-M-a) || tmux select-pane -L"
bind -n C-w run "($is_zsh && tmux send-keys C-w) || ($is_vim && tmux send-keys C-w) || ($is_fzf && tmux send-keys C-w) || ($is_peco && tmux send-keys C-w) || tmux select-pane -D"
bind -n C-s run "($is_zsh && tmux send-keys C-s) || ($is_vim && tmux send-keys C-s) || ($is_fzf && tmux send-keys C-s) || ($is_peco && tmux send-keys C-s) || tmux select-pane -U"
bind -n C-d if-shell "$is_vim" "send-keys C-d"  "select-pane -R"


# set synchronize-panes
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# activate mouse motions
setw -g mouse on

# 256色端末を使用する
#set -g default-terminal "screen-256color"
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black
set -g status-left "#[fg=colour108,bg=colour237,bold] [#S:#I:#P] "
set -g status-position top

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# for states line
set-option -g pane-border-status top
set-option -g pane-border-format "#[fg=black,bg=blue] #P #[default]#(tmux-pane-border #{pane_current_command} #{pane_pid} #{pane_current_path})"

# for clipboard
if-shell 'which putclip' \
	'\
		setw -g mode-keys vi; \
		bind b display "putclip True"; \
		bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "iconv -s -t SJIS | putclip"\; display "Copied"; \
		bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "iconv -s -t SJIS | putclip"\; display "Copied"; \
		bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "iconv -s -t SJIS | putclip"\; display "Copied"; \
	'
if-shell 'which xclip' \
	'\
		setw -g mode-keys vi; \
		bind b display "xclip True"; \
		bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"\; display "Copied"; \
		bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"\; display "Copied"; \
		bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"\; display "Copied"; \
	'
# 
# if-shell 'which putclip' \
# '\
# 	bind b \; display "shin"
# ' \
# '\
# 	bind b \; display "gi"
# '

#bind P paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
#bind-key -t vi-copy 'r' rectangle-toggle

# other
bind r source-file ~/.tmux.conf\; display "~/.tmux.conf Reloaded"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'
